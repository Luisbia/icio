---
title: "Understanding ICIOs: a practical guide"
author: "Luis BIedma"
format: html
editor: source
execute:
  warning: false
  message: false
self-contained: true
---

## ICIOs

ICIOs stand for Inter Country Input Output tables, it is an extension of the relatively well known framework of Input Output tables. ICIOs serve the purpose to enrich the analysis by producing additional indicators like Trade in Value Added, carbon footprints (when put together with some environmental data) and so on. 

A basic understanding of Input Output tables and their inmediate statistical predecessors (supply use tables) is needed. We will build progressively our knowledge on ICIOs starting from the most basic concepts.

ICIOs datasets are huge! The latest WIOD (https://www.rug.nl/ggdc/valuechain/wiod/wiod-2016-release) covering the years 2000-2014 is more than 800 MBs zipped files as excel files and 600 MBs as R files. Figaro files are even bigger. A single year of data consists of thousands of rows and columns. Therefore, we will use R for exploring them.

## Supply tables

A supply table show us, by product and industry, the amount of goods and services available in an economy. The goods and services available can be produced domestically (P.1) or can be imported (P.7). 

## Production (P.1)

A supply table shows the products in the rows and the industries in the columns. The matrix can be squared (same number of products and industries) or rectangular (more products than industries). A feature is that the diagonal of the matrix will include the highest amounts as there is a relationship between the product (CPA) and activities (NACE) classifications. CPA_A01	Products of agriculture, hunting and related services will be mainly produced by activity A	Agriculture, forestry and fishing, but other industries could produce some output of CPA_A01 as secondary activity and units classified in NACE A will produce some secondary output of other products.

Let's download a supply table and illustrate it.

```{r}
library(tidyverse)
#sut_bp<- eurostat::get_eurostat("naio_10_cp15", time_format = "num") 
prod_na<- eurostat::get_eurostat_dic("prod_na") %>% 
  rename(prod_na = code_name, prod_na_label = full_name)

induse<- eurostat::get_eurostat_dic("induse") %>% 
  rename(induse = code_name, induse_label = full_name)

geo<- eurostat::get_eurostat_dic("geo") %>% 
    rename(geo = code_name, geo_label = full_name)

sut_bp<- arrow::read_parquet("data/supply/sut_bp.parquet")
```

Let's find out which activities produce CPA_A01 products in Spain in 2019.

```{r}
tmp <- sut_bp %>%
  filter(
    geo == "ES" &
      time == 2019 &
      unit == "MIO_EUR" &
      str_detect(prod_na, "CPA_A01") &
      values != 0 &
      !str_detect(induse, "P7|D21|TS|OTTM")
  ) %>%
   mutate(share_induse = round(values * 100 / values[induse == "TOTAL"], 2)) %>% 
  filter(induse != "TOTAL") %>% 
  left_join(.,induse) %>% 
   select(induse, induse_label, prod_na, share_induse)



knitr::kable(tmp, 
             caption = "Spain: Domestic production of CPA_A's by activities, 2019",
             digits = 2)
```

Of the approximately EUR 50 bn domestic production of Products of agriculture, hunting and related services, 99.2% are produced by NACE activity A and the remaining 0.8% by other activities.

Let's look now at What products the activity C29 (Manufacture of motor vehicles, trailers and semi-trailers) produced in Spain in 2019?

```{r}
tmp <- sut_bp %>%
  filter(
    geo == "ES" & 
    time == 2019  & 
    unit == "MIO_EUR" &
    str_detect(induse, "C29") &
    values != 0 & 
    !str_detect(prod_na, "P11|P12|TOTADJ")
  ) %>%
  mutate(share_prod_na = round(values * 100 / values[prod_na == "TOTAL"], 2)) %>%
  arrange(desc(share_prod_na)) %>% 
  left_join(.,prod_na) %>% 
    select(induse, prod_na, prod_na_label, share_prod_na) %>% 
  filter(share_prod_na >= 0.1 & prod_na !="TOTAL")

knitr::kable(tmp, 
             caption = "Spain: Domestic production of products of activity C29, 2019",
             digits = 1)
```

Around 85% of the products are Motor vehicles, trailers and semi-trailers (CPA_C29) but activity C29 also produces other types of goods and services.

Sometimes the use table also offers a sector breakdown, something not available in other national accounts tables. They either show activities or sectors but not both. It is for example useful to see in which activities the government sector is a producer or to know the the split between government and non-government of certain activities (health, education).

Let's see in which activities the government sector produces output.

```{r}
tmp <- sut_bp %>%
  filter(
    geo == "ES" & 
    time == 2019  & 
    unit == "MIO_EUR" &
    prod_na == "P13" &
    values != 0 &
    induse != "TOTAL") %>%
  left_join(.,induse) %>% 
  select(induse, induse_label, values) %>%
  arrange(desc(values))

knitr::kable(tmp, 
             caption = "Spain: Non-market Output, 2019",
             format.args = list(big.mark = ","), digits = 0)
```

And let's look how much government (or non-market output) represents in health and education.

```{r}
tmp <- sut_bp %>%
  filter(
    geo == "ES" & 
    time == 2019  & 
    unit == "MIO_EUR" &
    prod_na %in% c("TOTAL", "P13") &
    values != 0 &
    induse %in% c("P", "Q86")) %>%
  pivot_wider(names_from = prod_na,
              values_from =values) %>% 
  mutate(share_gov = round(P13*100/TOTAL,1)) %>% 
  left_join(.,induse) %>% 
  select(induse, induse_label, share_gov) 

knitr::kable(tmp, 
             caption = "Spain: Share of Governme Output in NACE P & Q86, 2019",
              digits = 1)

```


## Imports (P.7)

In order to calculate the total supply of a product we need to add the imported goods and services, by adding and additional column to the domestically produced goods and services.

We can look at the top 5 imported products.

```{r}
tmp <- sut_bp %>%
  filter(
    geo == "ES" & 
    time == 2019  & 
    unit == "MIO_EUR" & 
    induse == "P7" &
    !str_detect(prod_na, "TOTADJ|OP_RES|ADJ_P7")
  ) %>%
   mutate(share_prod_na = round(values * 100 / values[prod_na == "TOTAL"], 2)) %>%
  arrange(desc(share_prod_na)) %>%
  filter(prod_na != "TOTAL") %>% 
  head(5) %>% 
  left_join(.,prod_na) %>% 
   select(induse, prod_na, prod_na_label, share_prod_na)

knitr::kable(tmp, 
             caption = "Spain: Top 5 imported products, 2019",
             digits = 1)
```

## Breaking down imports

We could go a bit further and look at the origin of the imports. For example, Eurostat requests a breakdown between EU/non-EU countries. But if we would go further we could break them down into a more detailed level. For example, Figaro does it for 45 countries. We will have then an inter country supply table.

```{r}
tmp <- sut_bp %>%
  filter(
    geo == "ES" &
    time == 2019  &
    unit == "MIO_EUR" & 
    induse %in% c("P7", "P7_B0", "P7_D0") &
    prod_na == "CPA_A01"
  ) %>%
  left_join(.,induse) %>% 
  select(induse, induse_label, prod_na, values) %>%
  pivot_wider(names_from = c(induse,induse_label),
              values_from = values)

knitr::kable(tmp, 
             caption = "Spain: Breakdown of imported CPA_A01 products, 2019",
             format.args = list(big.mark = ","), digits = 1)

```

## Total supply (TS)

With P.1 and P.7 we are now in a position to calculate the total supply of a product in our economy and do some analysis about our dependency in external products.

```{r}
tmp <- sut_bp %>%
  filter(time == 2019  &
         unit == "MIO_EUR" &
         prod_na == "CPA_A01" & 
         induse %in% c("TOTAL", "P7")) %>%
  select(geo, induse, prod_na, values) %>%
  pivot_wider(names_from = induse,
              values_from = values) %>%
  mutate(P7_P1 = round(P7 * 100 / TOTAL, 1)) %>%
  na.omit() %>%
  filter(!str_detect(geo, "EU|EA")) %>%
  rename(P1 = TOTAL) %>%
  arrange(P7_P1) %>% 
  left_join(.,geo) %>% 
  select(geo, geo_label ,P1, P7, P7_P1)

knitr::kable(tmp, 
             caption = "Share of imports in production, 2019",
             format.args = list(big.mark = ","), digits = 0)
```

We see the ratio P7/P1 is lower in relatively poorer countries (MK, RS, EL, RO) and higher in LU (more than 100%), NL, BE and DE. 

## Matrix industry by product

